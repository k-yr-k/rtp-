// Recreating 'Vega-Nor' by Victor Vasarely, 1969
// Original Artwork: https://www.albrightknox.org/artworks/k196929-vega-nor
// Version B, Recreated by Kenny Kim, 2022

function setup() {
  createCanvas(1020, 1020);
  background(191, 142, 84);
}

let colorRef1 = [
  0,1,2,3,4,5,6,7,8,9,10,10,11,12,13,14,15,16,17,18,19,20,
  1,2,3,4,5,6,7,8,9,10,11,9,10,11,12,13,14,15,16,17,18,19,
  2,3,4,5,6,7,8,9,10,11,12,8,9,10,11,12,13,14,15,16,17,18,
  3,4,5,6,7,8,9,10,11,12,13,7,8,9,10,11,12,13,14,15,16,17,
  4,5,6,7,8,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14,15,16,
  5,6,7,8,9,10,11,12,13,14,15,5,6,7,8,9,10,11,12,13,14,15,
  6,7,8,9,10,11,12,13,14,15,16,4,5,6,7,8,9,10,11,12,13,14,
  7,8,9,10,11,12,13,14,15,16,17,3,4,5,6,7,8,9,10,11,12,13,
  8,9,10,11,12,13,14,15,16,17,18,2,3,4,5,6,7,8,9,10,11,12,
  9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,
  10,11,12,13,14,15,16,17,18,19,20,0,1,2,3,4,5,6,7,8,9,10,
  10,9,8,7,6,5,4,3,2,1,0,20,19,18,17,16,15,14,13,12,11,10,
  11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,
  12,11,10,9,8,7,6,5,4,3,2,18,17,16,15,14,13,12,11,10,9,8,
  13,12,11,10,9,8,7,6,5,4,3,17,16,15,14,13,12,11,10,9,8,7,
  14,13,12,11,10,9,8,7,6,5,4,16,15,14,13,12,11,10,9,8,7,6,
  15,14,13,12,11,10,9,8,7,6,5,15,14,13,12,11,10,9,8,7,6,5,
  16,15,14,13,12,11,10,9,8,7,6,14,13,12,11,10,9,8,7,6,5,4,
  17,16,15,14,13,12,11,10,9,8,7,13,12,11,10,9,8,7,6,5,4,3,
  18,17,16,15,14,13,12,11,10,9,8,12,11,10,9,8,7,6,5,4,3,2,
  19,18,17,16,15,14,13,12,11,10,9,11,10,9,8,7,6,5,4,3,2,1,
  20,19,18,17,16,15,14,13,12,11,10,10,9,8,7,6,5,4,3,2,1,0,
];
let colorRef2 = [
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
];    
let colorRef3 = [
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
]; 
let colors1 = [
  [238, 82, 23],
  [216, 76, 50],
  [194, 46, 21],
  [172, 30, 27],
  [150, 30, 35],
  [128, 39, 41],
  [106, 43, 51],
  [84, 34, 45],
  [62, 39, 26],
  [40, 32, 35],
  [18, 30, 39],
  [27, 33, 29],
  [36, 51, 30],
  [42, 61, 57],
  [70, 75, 52],
  [99, 94, 54],
  [122, 93, 59],
  [150, 107, 54],
  [180, 126, 56],
  [206, 135, 57],
  [235, 167, 58],
];
let colors2 = [
  [3, 83, 156],
  [26, 110, 76],
];
let colors3 = [
  [3, 83, 156],
  [26, 110, 76],
];
let overallLen = 22;

function draw() {
  rectMode(CENTER);
  translate(10, 10);

  // Drawing the outer frame border of the canvas
  let a = color(106, 65, 43);
  fill(a);
  noStroke();
  rect(width / 2 - 10, height / 2 - 10, 1016, 1016);

  let b = color(191, 142, 8);
  fill(b);
  noStroke();
  rect(width / 2 - 10, height / 2 - 10, 1010, 1010);

  let c = color(89, 97, 99);
  fill(c);
  noStroke();
  rect(width / 2 - 10, height / 2 - 10, 1008, 1008);

  // Mapping the overall points with sphere
  var pts = [];
  for (let i = 0; i <= overallLen; i++) {
    var column = [];
    for (let j = 0; j <= overallLen; j++) {
      var x = map(i, 0, overallLen, 0, 1000);
      var y = map(j, 0, overallLen, 0, 1000);
      var distance = dist(x, y, 500, 500);
      var pct = map(distance, 0, 430, 1, 0, true);
      var dx = x - 500;
      var dy = y - 500;
      x += dx * pct;
      y += dy * pct;
      column.push(createVector(x, y));
      // circle(x, y, 10);
    }
    pts.push(column);
  }

  // Draw the first box
  for (i = 0; i < overallLen; i++) {
    for (j = 0; j < overallLen; j++) {
      colour = colors1[colorRef1[i * overallLen + j]];
      fill(colour);
      noStroke();
      beginShape();
      vertex(pts[i][j].x, pts[i][j].y);
      vertex(pts[i + 1][j].x, pts[i + 1][j].y);
      vertex(pts[i + 1][j + 1].x, pts[i + 1][j + 1].y);
      vertex(pts[i][j + 1].x, pts[i][j + 1].y);
      endShape(CLOSE);
    }
  }

  // Draw the second box
  for (i = 0; i < overallLen; i++) {
    for (j = 0; j < overallLen; j++) {
      colour = colors2[colorRef2[i * overallLen + j]];
      fill(colour);
      noStroke();
      beginShape();
      let offset = 6;
      vertex(pts[i][j].x+offset, pts[i][j].y+offset);
      vertex(pts[i + 1][j].x-offset, pts[i + 1][j].y+offset);
      vertex(
        pts[i + 1][j + 1].x-offset,
        pts[i + 1][j + 1].y-offset
      );
      vertex(pts[i][j + 1].x+offset, pts[i][j + 1].y-offset);
      endShape(CLOSE);
    }
  }
  
  // Draw the third box
  for (i = 0; i < overallLen; i++) {
    for (j = 0; j < overallLen; j++) {
      colour = colors3[colorRef3[i * overallLen + i]];
      fill(colour);
      noStroke();
      beginShape();
      let offset = 12;
      vertex(pts[i][j].x+offset, pts[i][j].y+offset);
      vertex(pts[i + 1][j].x-offset, pts[i + 1][j].y+offset);
      vertex(
        pts[i + 1][j + 1].x-offset,
        pts[i + 1][j + 1].y-offset
      );
      vertex(pts[i][j + 1].x+offset, pts[i][j + 1].y-offset);
      endShape(CLOSE);
    }
  } 
}